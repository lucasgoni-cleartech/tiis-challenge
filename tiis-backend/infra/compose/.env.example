# ============================================
# TIIS Backend - Environment Configuration
# ============================================
# Copy this file to .env and fill with actual values
# DO NOT commit .env with secrets to version control

# ============================================
# API Configuration
# ============================================
# DummyJSON Users API base URL
USERS_API_BASE=https://dummyjson.com/users

# API timeout in seconds
API_TIMEOUT=30

# ============================================
# Scheduler Configuration (Extractor)
# ============================================
# Cron schedule for daily extraction (default: 03:00 daily)
EXTRACT_SCHEDULE_CRON=0 3 * * *

# Pagination settings
EXTRACT_LIMIT=100
EXTRACT_MAX_RETRIES=3
EXTRACT_RETRY_BACKOFF_BASE=5

# ============================================
# File System Paths
# ============================================
# Base data directory
DATA_DIR=/data

# State persistence directory
STATE_DIR=/data/state

# Raw users output directory
RAW_DIR=/data/raw_users

# Processed users output directory
PROCESSED_DIR=/data/processed_users

# Dead-letter queue directory
DLQ_DIR=/data/dlq

# Departments lookup file path (canonical)
DEPARTMENTS_CSV=/data/departments.csv

# ============================================
# Redis Configuration
# ============================================
# Redis connection URL
REDIS_URL=redis://redis:6379/0

# Redis Pub/Sub channels
REDIS_CHANNEL_RAW=files.raw_users
REDIS_CHANNEL_PROCESSED=files.processed_users
REDIS_CHANNEL_DLQ=files.dlq

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=50
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# ============================================
# Database Configuration (SQLite)
# ============================================
# SQLite database URL
SQLITE_URL=sqlite:////data/db/app.db

# SQLAlchemy pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# ============================================
# SFTP Configuration (local Compose)
# ============================================
# Hostname is the Docker Compose service name
SFTP_HOST=sftp-server
SFTP_PORT=22

# User created by the sftp-server container
SFTP_USERNAME=tiis_user

# Private key is injected as a Docker secret into backend-saver
SFTP_KEY_PATH=/run/secrets/sftp_key

SFTP_KEY_PASSPHRASE=

SFTP_REMOTE_BASE=uploads

# Connection tuning
SFTP_TIMEOUT=30
SFTP_MAX_RETRIES=3

# ============================================
# Encryption Configuration (Optional)
# ============================================
# Encryption mode: none | symmetric | asymmetric
ENCRYPTION_MODE=none

# Symmetric encryption key path (if ENCRYPTION_MODE=symmetric)
ENCRYPTION_KEY_PATH=/run/secrets/enc_key

# ============================================
# Backend API Configuration
# ============================================
# FastAPI server port
API_PORT=8000

# API host binding
API_HOST=0.0.0.0

# API workers (uvicorn)
API_WORKERS=4

# API log level: debug | info | warning | error
API_LOG_LEVEL=info

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# ============================================
# Logging Configuration
# ============================================
# Log level: DEBUG | INFO | WARNING | ERROR | CRITICAL
LOG_LEVEL=INFO

# Log format: json | text
LOG_FORMAT=json

# Log output: stdout | file
LOG_OUTPUT=stdout

# Log file path (if LOG_OUTPUT=file)
LOG_FILE_PATH=/data/logs/app.log

# ============================================
# Application Metadata
# ============================================
# Environment: development | staging | production
ENVIRONMENT=production

# Application name
APP_NAME=tiis-backend

# Application version
APP_VERSION=0.1.0
